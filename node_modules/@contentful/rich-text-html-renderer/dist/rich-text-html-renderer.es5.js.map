{"version":3,"file":"rich-text-html-renderer.es5.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  BLOCKS,\n  Block,\n  Document,\n  INLINES,\n  Inline,\n  MARKS,\n  Mark,\n  Text,\n  helpers,\n} from '@contentful/rich-text-types';\nimport escape from 'escape-html';\n\nconst attributeValue = (value: string) => `\"${value.replace(/\"/g, '&quot;')}\"`;\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.PARAGRAPH]: (node, next) => `<p>${next(node.content)}</p>`,\n  [BLOCKS.HEADING_1]: (node, next) => `<h1>${next(node.content)}</h1>`,\n  [BLOCKS.HEADING_2]: (node, next) => `<h2>${next(node.content)}</h2>`,\n  [BLOCKS.HEADING_3]: (node, next) => `<h3>${next(node.content)}</h3>`,\n  [BLOCKS.HEADING_4]: (node, next) => `<h4>${next(node.content)}</h4>`,\n  [BLOCKS.HEADING_5]: (node, next) => `<h5>${next(node.content)}</h5>`,\n  [BLOCKS.HEADING_6]: (node, next) => `<h6>${next(node.content)}</h6>`,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, next) => `<div>${next(node.content)}</div>`,\n  [BLOCKS.EMBEDDED_RESOURCE]: (node, next) => `<div>${next(node.content)}</div>`,\n  [BLOCKS.UL_LIST]: (node, next) => `<ul>${next(node.content)}</ul>`,\n  [BLOCKS.OL_LIST]: (node, next) => `<ol>${next(node.content)}</ol>`,\n  [BLOCKS.LIST_ITEM]: (node, next) => `<li>${next(node.content)}</li>`,\n  [BLOCKS.QUOTE]: (node, next) => `<blockquote>${next(node.content)}</blockquote>`,\n  [BLOCKS.HR]: () => '<hr/>',\n  [BLOCKS.TABLE]: (node, next) => `<table>${next(node.content)}</table>`,\n  [BLOCKS.TABLE_ROW]: (node, next) => `<tr>${next(node.content)}</tr>`,\n  [BLOCKS.TABLE_HEADER_CELL]: (node, next) => `<th>${next(node.content)}</th>`,\n  [BLOCKS.TABLE_CELL]: (node, next) => `<td>${next(node.content)}</td>`,\n  [INLINES.ASSET_HYPERLINK]: (node) => defaultInline(INLINES.ASSET_HYPERLINK, node as Inline),\n  [INLINES.ENTRY_HYPERLINK]: (node) => defaultInline(INLINES.ENTRY_HYPERLINK, node as Inline),\n  [INLINES.RESOURCE_HYPERLINK]: (node) =>\n    defaultInlineResource(INLINES.RESOURCE_HYPERLINK, node as Inline),\n  [INLINES.EMBEDDED_ENTRY]: (node) => defaultInline(INLINES.EMBEDDED_ENTRY, node as Inline),\n  [INLINES.EMBEDDED_RESOURCE]: (node) =>\n    defaultInlineResource(INLINES.EMBEDDED_RESOURCE, node as Inline),\n  [INLINES.HYPERLINK]: (node, next) => {\n    const href = typeof node.data.uri === 'string' ? node.data.uri : '';\n    return `<a href=${attributeValue(href)}>${next(node.content)}</a>`;\n  },\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: (text) => `<b>${text}</b>`,\n  [MARKS.ITALIC]: (text) => `<i>${text}</i>`,\n  [MARKS.UNDERLINE]: (text) => `<u>${text}</u>`,\n  [MARKS.CODE]: (text) => `<code>${text}</code>`,\n  [MARKS.SUPERSCRIPT]: (text) => `<sup>${text}</sup>`,\n  [MARKS.SUBSCRIPT]: (text) => `<sub>${text}</sub>`,\n  [MARKS.STRIKETHROUGH]: (text) => `<s>${text}</s>`,\n};\n\nconst defaultInline = (type: string, node: Inline) =>\n  `<span>type: ${escape(type)} id: ${escape(node.data.target.sys.id)}</span>`;\n\nconst defaultInlineResource = (type: string, node: Inline) =>\n  `<span>type: ${escape(type)} urn: ${escape(node.data.target.sys.urn)}</span>`;\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface Next {\n  (nodes: CommonNode[]): string;\n}\n\nexport interface NodeRenderer {\n  (node: Block | Inline, next: Next): string;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: string) => string;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n  /**\n   * Keep line breaks and multiple spaces\n   */\n  preserveWhitespace?: boolean;\n  /**\n   * Strip empty trailing paragraph from the document\n   */\n  stripEmptyTrailingParagraph?: boolean;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to an html string.\n */\nexport function documentToHtmlString(\n  richTextDocument: Document,\n  options: Partial<Options> = {},\n): string {\n  if (!richTextDocument || !richTextDocument.content) {\n    return '';\n  }\n\n  // Strip empty trailing paragraph if enabled\n  let processedDocument = richTextDocument;\n  if (options.stripEmptyTrailingParagraph) {\n    processedDocument = helpers.stripEmptyTrailingParagraphFromDocument(richTextDocument);\n  }\n\n  return nodeListToHtmlString(processedDocument.content, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n    preserveWhitespace: options.preserveWhitespace,\n  });\n}\n\nfunction nodeListToHtmlString(\n  nodes: CommonNode[],\n  { renderNode, renderMark, preserveWhitespace }: Options,\n): string {\n  return nodes\n    .map<string>((node) => nodeToHtmlString(node, { renderNode, renderMark, preserveWhitespace }))\n    .join('');\n}\n\nfunction nodeToHtmlString(\n  node: CommonNode,\n  { renderNode, renderMark, preserveWhitespace }: Options,\n): string {\n  if (helpers.isText(node)) {\n    let nodeValue = escape(node.value);\n\n    // If preserveWhitespace is true, handle line breaks and spaces.\n    if (preserveWhitespace) {\n      nodeValue = nodeValue\n        .replace(/\\n/g, '<br/>')\n        .replace(/ {2,}/g, (match) => '&nbsp;'.repeat(match.length));\n    }\n\n    if (node.marks.length > 0) {\n      return node.marks.reduce((value: string, mark: Mark) => {\n        if (!renderMark[mark.type]) {\n          return value;\n        }\n        return renderMark[mark.type](value);\n      }, nodeValue);\n    }\n\n    return nodeValue;\n  } else {\n    const nextNode: Next = (nodes) =>\n      nodeListToHtmlString(nodes, { renderMark, renderNode, preserveWhitespace });\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      // TODO: Figure what to return when passed an unrecognized node.\n      return '';\n    }\n    return renderNode[node.nodeType](node, nextNode);\n  }\n}\n"],"names":["BLOCKS","INLINES","MARKS","helpers"],"mappings":"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"}