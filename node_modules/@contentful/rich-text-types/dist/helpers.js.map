{"version":3,"file":"helpers.js","sourceRoot":"","sources":["../src/helpers.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAqBA,4BAEC;AAKD,0BAEC;AAKD,wBAEC;AAKD,4CAWC;AAoBD,0FAgBC;AAzFD,mCAAkC;AAClC,qCAAoC;AAGpC;;;GAGG;AACH,SAAS,QAAQ,CAAC,GAA4B,EAAE,KAAc;IAC5D,KAAkB,UAAgB,EAAhB,KAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAhB,cAAgB,EAAhB,IAAgB,EAAE,CAAC;QAAhC,IAAM,GAAG,SAAA;QACZ,IAAI,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YACvB,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;GAEG;AACH,SAAgB,QAAQ,CAAC,IAAU;IACjC,OAAO,QAAQ,CAAC,iBAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1C,CAAC;AAED;;GAEG;AACH,SAAgB,OAAO,CAAC,IAAU;IAChC,OAAO,QAAQ,CAAC,eAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzC,CAAC;AAED;;GAEG;AACH,SAAgB,MAAM,CAAC,IAAU;IAC/B,OAAO,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC;AAClC,CAAC;AAED;;GAEG;AACH,SAAgB,gBAAgB,CAAC,IAAW;IAC1C,IAAI,IAAI,CAAC,QAAQ,KAAK,eAAM,CAAC,SAAS,EAAE,CAAC;QACvC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC9B,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjC,OAAO,QAAQ,CAAC,QAAQ,KAAK,MAAM,IAAK,QAAiB,CAAC,KAAK,KAAK,EAAE,CAAC;AACzE,CAAC;AAED,SAAS,eAAe,CAAC,QAAiB;IACxC,OAAO,CACL,QAAQ,IAAI,IAAI;QAChB,OAAO,QAAQ,KAAK,QAAQ;QAC5B,SAAS,IAAI,QAAQ;QACrB,KAAK,CAAC,OAAO,CAAE,QAAsB,CAAC,OAAO,CAAC,CAC/C,CAAC;AACJ,CAAC;AAED,IAAM,uBAAuB,GAAG,CAAC,CAAC;AAElC;;;;;;GAMG;AACH,SAAgB,uCAAuC,CAAC,QAAmB;IACzE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,uBAAuB,EAAE,CAAC;QACpF,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,IAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAE/D,+CAA+C;IAC/C,IAAI,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC/B,6BACK,QAAQ,KACX,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IACtC;IACJ,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["import { BLOCKS } from './blocks';\nimport { INLINES } from './inlines';\nimport { Block, Inline, Node, Text, Document as CDocument } from './types';\n\n/**\n * Tiny replacement for Object.values(object).includes(key) to\n * avoid including CoreJS polyfills\n */\nfunction hasValue(obj: Record<string, unknown>, value: unknown) {\n  for (const key of Object.keys(obj)) {\n    if (value === obj[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Checks if the node is an instance of Inline.\n */\nexport function isInline(node: Node): node is Inline {\n  return hasValue(INLINES, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Block.\n */\nexport function isBlock(node: Node): node is Block {\n  return hasValue(BLOCKS, node.nodeType);\n}\n\n/**\n * Checks if the node is an instance of Text.\n */\nexport function isText(node: Node): node is Text {\n  return node.nodeType === 'text';\n}\n\n/**\n * Checks if a paragraph is empty (has only one child and that child is an empty string text node)\n */\nexport function isEmptyParagraph(node: Block): boolean {\n  if (node.nodeType !== BLOCKS.PARAGRAPH) {\n    return false;\n  }\n\n  if (node.content.length !== 1) {\n    return false;\n  }\n\n  const textNode = node.content[0];\n  return textNode.nodeType === 'text' && (textNode as Text).value === '';\n}\n\nfunction isValidDocument(document: unknown): document is CDocument {\n  return (\n    document != null &&\n    typeof document === 'object' &&\n    'content' in document &&\n    Array.isArray((document as CDocument).content)\n  );\n}\n\nconst MIN_NODES_FOR_STRIPPING = 2;\n\n/**\n * Strips empty trailing paragraph from a document if enabled\n * @param document - The rich text document to process\n * @returns A new document with the empty trailing paragraph removed (if conditions are met)\n * @example\n * const processedDoc = stripEmptyTrailingParagraphFromDocument(document);\n */\nexport function stripEmptyTrailingParagraphFromDocument(document: CDocument): CDocument {\n  if (!isValidDocument(document) || document.content.length < MIN_NODES_FOR_STRIPPING) {\n    return document;\n  }\n\n  const lastNode = document.content[document.content.length - 1];\n\n  // Check if the last node is an empty paragraph\n  if (isEmptyParagraph(lastNode)) {\n    return {\n      ...document,\n      content: document.content.slice(0, -1),\n    };\n  }\n\n  return document;\n}\n"]}