"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var blocks_1 = require("../blocks");
var index_1 = require("../index");
describe('helpers', function () {
    describe('isEmptyParagraph', function () {
        it('returns true for empty paragraph', function () {
            var node = {
                nodeType: blocks_1.BLOCKS.PARAGRAPH,
                data: {},
                content: [
                    {
                        nodeType: 'text',
                        value: '',
                        marks: [],
                        data: {},
                    },
                ],
            };
            expect(index_1.helpers.isEmptyParagraph(node)).toBe(true);
        });
        it('returns false for non-empty paragraph', function () {
            var node = {
                nodeType: blocks_1.BLOCKS.PARAGRAPH,
                data: {},
                content: [
                    {
                        nodeType: 'text',
                        value: 'Hello world',
                        marks: [],
                        data: {},
                    },
                ],
            };
            expect(index_1.helpers.isEmptyParagraph(node)).toBe(false);
        });
        it('returns false for paragraph with multiple text nodes', function () {
            var node = {
                nodeType: blocks_1.BLOCKS.PARAGRAPH,
                data: {},
                content: [
                    {
                        nodeType: 'text',
                        value: '',
                        marks: [],
                        data: {},
                    },
                    {
                        nodeType: 'text',
                        value: '',
                        marks: [],
                        data: {},
                    },
                ],
            };
            expect(index_1.helpers.isEmptyParagraph(node)).toBe(false);
        });
        it('returns false for non-paragraph node', function () {
            var node = {
                nodeType: blocks_1.BLOCKS.HEADING_1,
                data: {},
                content: [
                    {
                        nodeType: 'text',
                        value: '',
                        marks: [],
                        data: {},
                    },
                ],
            };
            expect(index_1.helpers.isEmptyParagraph(node)).toBe(false);
        });
    });
    describe('stripEmptyTrailingParagraphFromDocument', function () {
        it('strips empty trailing paragraph', function () {
            var document = {
                nodeType: blocks_1.BLOCKS.DOCUMENT,
                data: {},
                content: [
                    {
                        nodeType: blocks_1.BLOCKS.PARAGRAPH,
                        data: {},
                        content: [
                            {
                                nodeType: 'text',
                                value: 'Hello world',
                                marks: [],
                                data: {},
                            },
                        ],
                    },
                    {
                        nodeType: blocks_1.BLOCKS.PARAGRAPH,
                        data: {},
                        content: [
                            {
                                nodeType: 'text',
                                value: '',
                                marks: [],
                                data: {},
                            },
                        ],
                    },
                ],
            };
            var result = index_1.helpers.stripEmptyTrailingParagraphFromDocument(document);
            expect(result.content).toHaveLength(1);
            expect(result.content[0].nodeType).toBe(blocks_1.BLOCKS.PARAGRAPH);
        });
        it('does not strip empty trailing paragraph when it is the only child', function () {
            var document = {
                nodeType: blocks_1.BLOCKS.DOCUMENT,
                data: {},
                content: [
                    {
                        nodeType: blocks_1.BLOCKS.PARAGRAPH,
                        data: {},
                        content: [
                            {
                                nodeType: 'text',
                                value: '',
                                marks: [],
                                data: {},
                            },
                        ],
                    },
                ],
            };
            var result = index_1.helpers.stripEmptyTrailingParagraphFromDocument(document);
            expect(result.content).toHaveLength(1);
        });
        it('does not strip non-empty trailing paragraph', function () {
            var document = {
                nodeType: blocks_1.BLOCKS.DOCUMENT,
                data: {},
                content: [
                    {
                        nodeType: blocks_1.BLOCKS.PARAGRAPH,
                        data: {},
                        content: [
                            {
                                nodeType: 'text',
                                value: 'Hello world',
                                marks: [],
                                data: {},
                            },
                        ],
                    },
                    {
                        nodeType: blocks_1.BLOCKS.PARAGRAPH,
                        data: {},
                        content: [
                            {
                                nodeType: 'text',
                                value: 'Not empty',
                                marks: [],
                                data: {},
                            },
                        ],
                    },
                ],
            };
            var result = index_1.helpers.stripEmptyTrailingParagraphFromDocument(document);
            expect(result.content).toHaveLength(2);
        });
    });
});
//# sourceMappingURL=helpers.test.js.map